from langchain_openai import ChatOpenAI
from browser_use import Agent
import asyncio
import os
import yaml


# Extract the OpenAI API Key from the config.yaml file
CONFIG_FILE = "config.yaml"

with open(CONFIG_FILE, "r") as file:
    config = yaml.safe_load(file)

openai_api_key = config['api_keys']['openai']['key']

# Connect to the LLM 
llm = ChatOpenAI(
    model="gpt-4o",
    openai_api_key=openai_api_key
)

async def breakdown_test(user_task: str) -> str:
    """
    This function takes a string containing the user-inputted 
    task and passes it to a large language model along with 
    a prompt to break it down into a sequence of smaller steps.
    """
    prompt = f"""
    You are a step-simplifying assistant. 

    Break down the following task into the **minimum number of steps possible**.
    Use only **essential** steps and **do not** include any unnecessary details.
    End the steps with "Then, close the browser.".

    If a logic in required, write: 
    "[WAIT FOR USER AUTHENTICATION] Pause for user to manually login. Do not attempt login via script to protect privacy."

    Task: {user_task}

    Format:
    1. Step 1
    2. Step 2
    ...
    """
    # Call the LLM 
    response = llm.invoke(prompt)
    return response.content.strip()

async def run_agent_with_retry(task_plan: str, max_retries: int = 3):
    """
    This function runs the cmoputer use agent with a retry mechanism.
    If the agent fails, it will retry up to max_retries times.
    """
    retries = 0
    while retries < max_retries:
        try:
            # Execute the task
            agent = Agent(
            task = task_plan,   # the plan generated by our GPT-4o model
            llm = llm,          # our GPT-4o model 
            )
            await agent.run()
            print(f"✅ Task completed successfully")
            break
        except Exception as e:
            retries += 1
            print(f"⚠️ Attempt {retries}/{max_retries} failed: {e}")
            if retries == max_retries:
                print("❌ All attempts failed. Please check the task and try again.")

async def main():
    if not openai_api_key:
        print("❌ OpenAI API key not found in config.yaml. Please add it and try again.")
        return
    
    # Prompt user to enter a task
    user_task = input("👋 Hi there! What task can I help you perform today? \n>> ")

    # Step 1: Use LLM of your choice to break it into steps
    print("🔍 Breaking down the task into smaller steps...")
    task_plan = await breakdown_test(user_task)
    print(f"\n📝 Task Plan:\n{task_plan}")

    # Step 2: Run agent with retry logic
    print("🚀 Running the agent...")
    await run_agent_with_retry(task_plan)

if __name__ == "__main__":
    asyncio.run(main())
